plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

group = 'studio.cn2b2t'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'codemc-repo'
        url = 'https://repo.codemc.io/repository/nms/'
    }
    maven {
        name = 'dmulloy2-repo'
        url = 'https://repo.dmulloy2.net/repository/public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

shadowJar {
    baseName = 'CN2B2TStudios-Core'
    classifier = null
    version = null
}

sourceSets {
    mainClassName = "studio.cn2b2t.core.MainKt"
}

dependencies {
    shadow "org.jetbrains.kotlin:kotlin-stdlib:1.7.10"
    compileOnly 'com.destroystokyo.paper:paper:1.12.2-R0.1-SNAPSHOT'
    compileOnly 'com.google.code.gson:gson:2.9.0'
    compileOnly 'com.comphenix.protocol:ProtocolLib:4.8.0'
    compileOnly fileTree(dir: '/libs', includes: ['*.jar'])
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
